import { isURL } from 'class-validator';
import { PrismaService } from 'nestjs-prisma';
import { Context, Message, On, Wizard, WizardStep } from 'nestjs-telegraf';
import { Markup } from 'telegraf';

import { TelegramContext } from './telegram-context.type';

@Wizard(TelegramBotWizard.name)
export class TelegramBotWizard {
  constructor(private readonly database: PrismaService) {}

  private readonly inlineKeyboard = Markup.inlineKeyboard([
    Markup.button.callback('‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞', `wizard_leave`),
  ]);

  /** –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ */
  @WizardStep(1)
  async firstStep(@Context() context: TelegramContext) {
    context.wizard.state.data = {};

    await context.replyWithHTML(
      'üè∑Ô∏è –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏',
      this.inlineKeyboard,
    );
    await context.wizard.next();
  }

  /** –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∞–º—É —Å—Å—ã–ª–∫—É */
  @On('text')
  @WizardStep(2)
  async secondStep(@Context() context: TelegramContext) {
    context.wizard.state.data.name = context.message.text;

    await context.replyWithHTML('üîó –ù–∞–ø–∏—à–∏—Ç–µ —Å—Å—ã–ª–∫—É', this.inlineKeyboard);
    await context.wizard.next();
  }

  /** –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –∏ –µ—Å–ª–∏ –≤—Å—ë –æ–∫, —Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º */
  @On('text')
  @WizardStep(3)
  async end(
    @Context() context: TelegramContext,
    @Message('text') text: string,
  ) {
    if (!isURL(text)) {
      await context.replyWithHTML(
        `
<b>‚ùå –û—à–∏–±–∫–∞! –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞!</b>

–ù–∞–ø–∏—à–∏—Ç–µ —Å—Å—ã–ª–∫—É –µ—â—ë —Ä–∞–∑ :3
`,
        this.inlineKeyboard,
      );

      return;
    }

    context.wizard.state.data.url = text;

    const link = await this.database.link.create({
      data: {
        name: context.wizard.state.data.name,
        url: context.wizard.state.data.url,
        userId: context.from.id,
      },
    });

    await context.replyWithHTML(`
üíæ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!

üîë <b>–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>${link.id}</code></b>

üè∑Ô∏è –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${link.name}
üîó URL: ${link.url}
`);

    await context.scene.leave();
  }
}
